import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:3.4.4"
    classpath "org.liquibase:liquibase-gradle-plugin:2.2.1"
  }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
  id 'org.liquibase.gradle' version '2.2.1'
  id 'org.openapi.generator' version "6.6.0"
}

group = 'com.john.library'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
      srcDir 'build/openapi/src/main/java'
    }
  }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    MAPSTRUCT_VERSION = '1.5.5.Final'
  SPRING_BOOT_VERSION = '3.4.4'
  LIQUIBASE_CORE_VERSION = '4.25.0'
  LIQUIBASE_GRADLE_VERSION = '2.2.1'
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MapStruct
    implementation "org.mapstruct:mapstruct:${MAPSTRUCT_VERSION}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${MAPSTRUCT_VERSION}"

  // Liquibase
  compileOnly "org.liquibase:liquibase-core:${LIQUIBASE_CORE_VERSION}"
  testImplementation "org.liquibase:liquibase-core:${LIQUIBASE_CORE_VERSION}"
  compileOnly "org.liquibase:liquibase-gradle-plugin:${LIQUIBASE_GRADLE_VERSION}"

  // OpenAPI Generator
  implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5")
  implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
  implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

  // Editor Config
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

// Generate API documentation
tasks.register("generate-apis", GenerateTask) {
  def inputDir = file("$rootDir/src/main/resources/open-api/api/")
  def ymlFiles = inputDir.listFiles().findAll { it.name.endsWith('.yml') }

  ymlFiles.each { ymlFile ->
    inputSpec = ymlFile.toString()
    outputDir = "$buildDir/openapi".toString()
    modelPackage = "com.john.library.mdm.adapter.in.rest.dto.request"
    apiPackage = "com.john.library.mdm.adapter.in.rest.api"
    packageName = "com.john.library.mdm.adapter.in.rest"
    generatorName = "spring"
    configOptions.putAll([
        "dateLibrary"      : "java8",
        "interfaceOnly"    : "true",
        "useTags"          : "true",
        "useSpringBoot3"   : "true",
        "useJakartaEe"     : "true",
        "useBeanValidation": "true",
        "skipOverwrite"    : "true"
    ])
    typeMappings.putAll([
        "OffsetDateTime": "Instant"
    ])
    importMappings.putAll([
        "java.time.OffsetDateTime": "java.time.Instant",
        "Pageable"                : "org.springframework.data.domain.Pageable",
        "BaseResponse"            : "com.john.library.mdm.adapter.in.rest.dto.response.BaseResponse",
        "Metadata"                : "com.john.library.mdm.adapter.in.rest.dto.response.Metadata",
        "FieldViolation"          : "com.john.library.mdm.adapter.in.rest.dto.response.FieldViolation"
    ])
    schemaMappings.putAll([
        "java.time.OffsetDateTime": "java.time.Instant",
        "Pageable"                : "org.springframework.data.domain.Pageable",
        "BaseResponse"            : "com.john.library.mdm.adapter.in.rest.dto.response.BaseResponse",
        "Metadata"                : "com.john.library.mdm.adapter.in.rest.dto.response.Metadata",
        "FieldViolation"          : "com.john.library.mdm.adapter.in.rest.dto.response.FieldViolation"
    ])
    validateSpec = false
  }
}

compileJava.dependsOn("generate-apis")
